
Use sql query to find how many rows of data you have.

		mysql> select count(*) as data_count from credit_card_data;
		+------------+
		| data_count |
		+------------+
		|      17976 |
		+------------+
		1 row in set (0.03 sec)

----------------------------------------------------------------------------------------------------------------

Now we will try to find the unique values in some of the categorical columns:

What are the unique values in the column Offer_accepted?

		mysql> select distinct(offer_accepted) from credit_card_data;
		+----------------+
		| offer_accepted |
		+----------------+
		| No             |
		| Yes            |
		+----------------+
		2 rows in set (0.01 sec)

What are the unique values in the column Reward?

		mysql> select distinct(reward) from credit_card_data;
		+-----------+
		| reward    |
		+-----------+
		| Air Miles |
		| Cash Back |
		| Points    |
		+-----------+
		3 rows in set (0.01 sec)

What are the unique values in the column mailer_type?

		mysql> select distinct(mailer_type) from credit_card_data;
		+-------------+
		| mailer_type |
		+-------------+
		| Letter      |
		| Postcard    |
		+-------------+
		2 rows in set (0.01 sec)

What are the unique values in the column credit_cards_held?

		mysql> select distinct(credit_cards_held) from credit_card_data order by credit_cards_held;
		+-------------------+
		| credit_cards_held |
		+-------------------+
		|                 1 |
		|                 2 |
		|                 3 |
		|                 4 |
		+-------------------+
		4 rows in set (0.01 sec)

What are the unique values in the column household_size?

		mysql> select distinct(household_size) from credit_card_data order by household_size;
		+----------------+
		| household_size |
		+----------------+
		|              1 |
		|              2 |
		|              3 |
		|              4 |
		|              5 |
		|              6 |
		|              8 |
		|              9 |
		+----------------+
		8 rows in set (0.01 sec)
		
------------------------------------------------------------------------------------------------------------

Arrange the data in a decreasing order by the average_balance of the house. Return only the customer_number 
of the top 10 customers with the highest average_balances in your data.

		mysql> select customer_number as customer_id from credit_card_data order by average_balance desc limit 10;
		+-------------+
		| customer_id |
		+-------------+
		|        2297 |
		|       12636 |
		|        8888 |
		|       10577 |
		|       14004 |
		|       10476 |
		|        2656 |
		|       15260 |
		|       15609 |
		|        8778 |
		+-------------+
		10 rows in set (0.01 sec)

------------------------------------------------------------------------------------------------------------

What is the average balance of all the customers in your data?

		mysql> select round(avg(average_balance), 2) as average from credit_card_data;
		+---------+
		| average |
		+---------+
		|  940.52 |
		+---------+
		1 row in set (0.05 sec)

-------------------------------------------------------------------------------------------------------------

In this exercise we will use simple group by to check the properties of some of the categorical variables in 
our data. Note wherever average_balance is asked, please take the average of the column average_balance:

What is the average balance of the customers grouped by Income Level? The returned result should have only 
two columns, income level and Average balance of the customers. Use an alias to change the name of the second 
column.

		mysql> select income_level, round(avg(average_balance), 2) as average from credit_card_data group by income_level order by average desc;
		+--------------+---------+
		| income_level | average |
		+--------------+---------+
		| High         |  942.57 |
		| Medium       |  940.89 |
		| Low          |  937.66 |
		+--------------+---------+
		3 rows in set (0.02 sec)

What is the average balance of the customers grouped by number_of_bank_accounts_open? The returned result should 
have only two columns, number_of_bank_accounts_open and Average balance of the customers. Use an alias to change 
the name of the second column.

		mysql> select bank_accounts_open, round(avg(average_balance), 2) as average from credit_card_data group by bank_accounts_open order by average desc;
		+--------------------+---------+
		| bank_accounts_open | average |
		+--------------------+---------+
		|                  3 |  948.28 |
		|                  1 |  941.53 |
		|                  2 |  936.47 |
		+--------------------+---------+
		3 rows in set (0.01 sec)

What is the average number of credit cards held by customers for each of the credit card ratings? The returned 
result should have only two columns, rating and average number of credit cards held. Use an alias to change the 
name of the second column.

		mysql> select credit_cards_held, round(avg(average_balance), 2) as average from credit_card_data group by credit_cards_held order by average desc;
		+-------------------+---------+
		| credit_cards_held | average |
		+-------------------+---------+
		|                 4 |  952.51 |
		|                 1 |  942.51 |
		|                 2 |   940.4 |
		|                 3 |  935.33 |
		+-------------------+---------+
		4 rows in set (0.01 sec)

Is there any correlation between the columns credit_cards_held and number_of_bank_accounts_open? You can analyse 
this by grouping the data by one of the variables and then aggregating the results of the other column. Visually 
check if there is a positive correlation or negative correlation or no correlation between the variables.

		mysql> select bank_accounts_open as num_accounts, ceil(avg(credit_cards_held)) as mode_num_card from credit_card_data group by num_accounts order by mode_num_card desc;
		+--------------+---------------+
		| num_accounts | mode_num_card |
		+--------------+---------------+
		|            1 |             2 |
		|            2 |             2 |
		|            3 |             2 |
		+--------------+---------------+
		3 rows in set (0.02 sec)

		mysql> select credit_cards_held as num_cards, floor(avg(bank_accounts_open)) as num_accounts from credit_card_data group by num_cards order by num_accounts desc;
		+-----------+--------------+
		| num_cards | num_accounts |
		+-----------+--------------+
		|         2 |            1 |
		|         1 |            1 |
		|         3 |            1 |
		|         4 |            1 |
		+-----------+--------------+
		4 rows in set (0.02 sec)

		There is no correlation between these two columns. According to the correlation matrix from the numerical 
		values in this dataset, the correlation value is towards 0; therefore, there are no patterns between them. 
		That means, the majority of the customers have hold two credit cars in only one bank account.


----------------------------------------------------------------------------------------------------------------

Your managers are only interested in the customers with the following properties:

Credit rating medium or high
Credit cards held 2 or less
Owns their own home
Household size 3 or more
For the rest of the things, they are not too concerned. Write a simple query to find what are the options 
available for them?

		mysql> select * from credit_card_data where credit_rating in ('Medium', 'High') and credit_cards_held < 3 and own_your_home = 'Yes' and household_size > 2 limit 10;
		+-----------------+----------------+-----------+-------------+--------------+--------------------+----------------------+---------------+-------------------+-------------+----------------+---------------+-----------------+------------+------------+------------+
		| customer_number | offer_accepted | reward    | mailer_type | income_level | bank_accounts_open | overdraft_protection | credit_rating | credit_cards_held | homes_owned | household_size | own_your_home | average_balance | Q1_balance | Q2_balance | Q3_balance |
		+-----------------+----------------+-----------+-------------+--------------+--------------------+----------------------+---------------+-------------------+-------------+----------------+---------------+-----------------+------------+------------+------------+
		|               2 | No             | Air Miles | Letter      | Medium       |                  1 | No                   | Medium        |                 2 |           2 |              5 | Yes           |          147.25 |      39.00 |     106.00 |      78.00 |
		|               5 | No             | Air Miles | Letter      | Medium       |                  1 | No                   | Medium        |                 2 |           1 |              6 | Yes           |         1211.00 |    2140.00 |    1357.00 |     982.00 |
		|              17 | No             | Points    | Postcard    | Low          |                  2 | No                   | Medium        |                 1 |           1 |              4 | Yes           |         1217.00 |     567.00 |    1161.00 |     966.00 |
		|              18 | No             | Air Miles | Postcard    | Low          |                  2 | No                   | High          |                 2 |           1 |              4 | Yes           |         1185.25 |     272.00 |    1523.00 |    2042.00 |
		|              20 | No             | Cash Back | Letter      | Medium       |                  1 | No                   | High          |                 2 |           1 |              5 | Yes           |         1086.75 |     764.00 |     997.00 |     921.00 |
		|              21 | No             | Points    | Postcard    | Low          |                  1 | No                   | High          |                 2 |           1 |              4 | Yes           |         1175.25 |    1234.00 |    1102.00 |    1423.00 |
		|              23 | No             | Cash Back | Letter      | High         |                  1 | No                   | High          |                 1 |           1 |              3 | Yes           |         1754.00 |    1876.00 |    1717.00 |    1507.00 |
		|              34 | No             | Air Miles | Postcard    | Low          |                  3 | No                   | Medium        |                 1 |           1 |              4 | Yes           |          659.50 |     715.00 |     626.00 |     746.00 |
		|              36 | No             | Points    | Letter      | High         |                  1 | No                   | High          |                 2 |           1 |              4 | Yes           |          875.25 |     995.00 |     693.00 |     946.00 |
		|              40 | No             | Air Miles | Postcard    | Low          |                  1 | Yes                  | Medium        |                 2 |           1 |              3 | Yes           |         1079.25 |    1832.00 |    1021.00 |     764.00 |
		+-----------------+----------------+-----------+-------------+--------------+--------------------+----------------------+---------------+-------------------+-------------+----------------+---------------+-----------------+------------+------------+------------+
		10 rows in set (0.00 sec)

Can you filter the customers who accepted the offers here?

		mysql> select customer_number, offer_accepted from credit_card_data where credit_rating in ('Medium', 'High') and credit_cards_held < 3 and own_your_home = 'Yes' and household_size > 2 and offer_accepted = 'Yes' limit 10;
		+-----------------+----------------+
		| customer_number | offer_accepted |
		+-----------------+----------------+
		|             113 | Yes            |
		|             132 | Yes            |
		|             251 | Yes            |
		|             478 | Yes            |
		|             606 | Yes            |
		|             638 | Yes            |
		|             748 | Yes            |
		|             752 | Yes            |
		|             918 | Yes            |
		|            1047 | Yes            |
		+-----------------+----------------+
		10 rows in set (0.00 sec)

Your managers want to find out the list of customers whose average balance is less than the average balance of 
all the customers in the database. Write a query to show them the list of such customers. You might need to use 
a subquery for this problem.

		mysql> select customer_number, average_balance from credit_card_data where average_balance < (select avg(average_balance) from credit_card_data) limit 10;
		+-----------------+-----------------+
		| customer_number | average_balance |
		+-----------------+-----------------+
		|               2 |          147.25 |
		|               3 |          276.50 |
		|               7 |          283.75 |
		|               8 |          278.50 |
		|              22 |          811.75 |
		|              24 |          689.50 |
		|              27 |          877.00 |
		|              28 |          769.50 |
		|              29 |          709.00 |
		|              30 |          690.00 |
		+-----------------+-----------------+
		10 rows in set (0.01 sec)

Since this is something that the senior management is regularly interested in, create a view of the same query.

		mysql> create or replace view customer_avg_balance as select customer_number, average_balance from credit_card_data where average_balance < (select avg(average_balance) from credit_card_data);
		Query OK, 0 rows affected (0.05 sec)

		mysql> select*from customer_avg_balance limit 15;
		+-----------------+-----------------+
		| customer_number | average_balance |
		+-----------------+-----------------+
		|               2 |          147.25 |
		|               3 |          276.50 |
		|               7 |          283.75 |
		|               8 |          278.50 |
		|              22 |          811.75 |
		|              24 |          689.50 |
		|              27 |          877.00 |
		|              28 |          769.50 |
		|              29 |          709.00 |
		|              30 |          690.00 |
		|              31 |          863.25 |
		|              32 |          733.00 |
		|              33 |          771.00 |
		|              34 |          659.50 |
		|              36 |          875.25 |
		+-----------------+-----------------+
		15 rows in set (0.01 sec)

What is the number of people who accepted the offer vs number of people who did not?

		mysql> select offer_accepted, count(offer_accepted) as count from credit_card_data group by offer_accepted;
		+----------------+-------+
		| offer_accepted | count |
		+----------------+-------+
		| No             | 16955 |
		| Yes            |  1021 |
		+----------------+-------+
		2 rows in set (0.01 sec)

Your managers are more interested in customers with a credit rating of high or medium. What is the difference 
in average balances of the customers with high credit card rating and low credit card rating?

		mysql> select round((select avg(average_balance) from credit_card_data where credit_rating = 'High') - (select avg(average_balance) from credit_card_data where credit_rating = 'Low'), 2) as difference_avg_high_low;
		+-------------------------+
		| difference_avg_high_low |
		+-------------------------+
		|                    4.05 |
		+-------------------------+
		1 row in set (0.02 sec)

		mysql> select credit_rating, round(avg(average_balance), 2) as average from credit_card_data where credit_rating != 'Medium' group by credit_rating;
		+---------------+---------+
		| credit_rating | average |
		+---------------+---------+
		| High          |  944.39 |
		| Low           |  940.34 |
		+---------------+---------+
		2 rows in set (0.02 sec)

In the database, which all types of communication (mailer_type) were used and with how many customers?

		mysql> select mailer_type, count(mailer_type) as count from credit_card_data group by mailer_type;
		+-------------+-------+
		| mailer_type | count |
		+-------------+-------+
		| Letter      |  8842 |
		| Postcard    |  9134 |
		+-------------+-------+
		2 rows in set (0.03 sec)

Provide the details of the customer that is the 11th least Q1_balance in your database.

		mysql> select*from credit_card_data order by Q1_balance limit 10, 1;
		+-----------------+----------------+-----------+-------------+--------------+--------------------+----------------------+---------------+-------------------+-------------+----------------+---------------+-----------------+------------+------------+------------+
		| customer_number | offer_accepted | reward    | mailer_type | income_level | bank_accounts_open | overdraft_protection | credit_rating | credit_cards_held | homes_owned | household_size | own_your_home | average_balance | Q1_balance | Q2_balance | Q3_balance |
		+-----------------+----------------+-----------+-------------+--------------+--------------------+----------------------+---------------+-------------------+-------------+----------------+---------------+-----------------+------------+------------+------------+
		|            5178 | No             | Cash Back | Postcard    | High         |                  2 | No                   | High          |                 1 |           1 |              5 | Yes           |          107.25 |       1.00 |     111.00 |      19.00 |
		+-----------------+----------------+-----------+-------------+--------------+--------------------+----------------------+---------------+-------------------+-------------+----------------+---------------+-----------------+------------+------------+------------+
		1 row in set (0.03 sec)